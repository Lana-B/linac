import numpy as np
import os

###############################################################
###                   User Settings                         ###
###############################################################
# blackout_first=True #from epi layer
gamma=False #else electrons
ElecFromElec=False
jobtime="72:00:00"
jobtime_hadd="01:00:00"

###############################################################
### Run different settings depending on computer or cluster ###
###############################################################
nodename=os.uname().nodename

# nodename="bp1-login01.data.bp.acrc.priv"

if nodename=="it034449.users.bris.ac.uk":
	materials_path="/Users/lb8075/gate-exercices-master-linac/linac/data/"	
	if gamma:
		phasespace_in="/Users/lb8075/gate-exercices-master-linac/linac/generatedGammasnSkimmed10Halfmm1.root"
	else:
		phasespace_in="/Users/lb8075/gate-exercices-master-linac/linac/output-lana2-PhS-e_500g4x3.root"
	file_number='1'
	how_many_primaries=200
	out_dir="/Users/lb8075/gate-exercices-master-linac/linac/output/"
	mac_loc="/Users/lb8075/gate-exercices-master-linac/linac/mac/"
	seed_rand=12345678
elif nodename=="bp1-login01.data.bp.acrc.priv":
	materials_path="/home/lb8075/linac/data/"
	if gamma:
		phasespace_in="/work/lb8075/PhaseSpaces/PhS2Gamma/output-lana2-PhS-g_nobias{id}.root"
	else:
		if ElecFromElec:
			phasespace_in="/work/lb8075/PhaseSpaces/PhS2Elec/ElecFromElec/output2e9primaries-lana2-PhS-e_nobias{id}.root"
		else:
			phasespace_in="/work/lb8075/PhaseSpaces/PhS2Elec/output2e9primaries-lana2-PhS-e_nobias{id}.root"
	file_number="$PBS_ARRAY_INDEX"
	how_many_primaries="${Nparts[$PBS_ARRAY_INDEX-1]}"
	out_dir="/work/lb8075/PhaseSpaces/Flex/"
	mac_loc="/home/lb8075/linac/mac/"
	seed_rand="$RANDOM$RANDOM$RANDOM"
else:
	raise ValueError('Nodename not recognised')

###############################################################
###       Set up dimensions, materials, translations        ###
###############################################################

# grating_thick=-9999, translation_peak_mm =-9999, BlackOut_thick =-9999
# translation_BO_mm=-9999, output_file_path=-9999, particle_type_input=-9999, materials_path=-9999
# file_number=-9999, phasespace_in=-9999, seed_rand=-9999, how_many_primaries=-9999
# blackout_mat=-9999, peak_mat=-9999

grating_thicknesses=np.array([100]) #um 30,50,80,100,200,300,350,400,500
BlackOut_distances=np.array([0,10]) # 0,10 mm
BlackOut_thickness=np.array([20]) #um 100,200,300,500,1000
blackout_material=np.array(['Aluminium'])  #'Polyethylene','Aluminium''silicon'
peak_material=np.array(['Aluminium']) #'Lead','Aluminium','silicon'
mat_path_air_density=np.array(['GateMaterials_AirPp9.db','GateMaterials_AirP1p4.db'])
front_face_epi_mm=450 #mm
front_face_epi_um=front_face_epi_mm*1000 #um

translation_BO_um=0
translation_peak_um=0

airbox_half_thick_mm=5.5 #mm
airbox_half_thick_um=5500 #um

all_qsub_hadd="!#/bin/bash\n\n"

# distance_BlackOut_to_peaks_mm=10 #mm

####### grating? distance from surface?!!

###############################################################
###        Create start of pbs submission file              ###
###############################################################

macrofile=f"{mac_loc}Main_PhS3_10x10_Flexible_airbox.mac"

hadd_string=f"#!/bin/bash \n\
#PBS -l walltime={jobtime_hadd} \n\
#PBS -j oe\n\
#PBS -l select=1:ncpus=1\n\
#PBS -l select=1:ncpus=1:mem=500mb\n\
#PBS -o /work/lb8075/job_logfiles\n\
\n\
module add apps/gate/8.2\n"

pbs_string_start=f"#!/bin/bash \n\
#PBS -l walltime={jobtime} \n\
#PBS -j oe\n\
#PBS -l select=1:ncpus=1\n\
#PBS -l select=1:ncpus=1:mem=500mb\n\
#PBS -J 1-988\n\
#PBS -o /work/lb8075/job_logfiles\n\
\n\
module add apps/gate/8.2\n"
if gamma:
	pbs_string_start+="Nparts=(12324799 12344333 12320787 12358361 12351653 12343871 12348580 12377844 12359044 12359558 12339245 12348723 12390508 12378512 12381074 12340780 \
12359019 12380818 12310263 12371441 12374875 12325019 12344434 12331759 12378988 12351222 12403313 12335501 12364976 12356855 12388273 12346750 12359575 12334015 12358989 \
12358076 12348926 12347520 12362180 12358310 12365191 12352399 12357959 12359978 12317036 12354435 12318754 12366124 12359250 12315165 12345842 12317852 12349948 12325936 \
12351486 12356296 12360431 12314638 12396307 12357984 12354090 12356510 12354666 12359407 12363992 12315285 12385841 12335594 12337404 12368744 12376725 12359634 12358969 \
12342484 12327755 12375507 12325143 12332087 12373730 12359673 12364984 12349303 12350554 12360487 12360180 12339307 12345321 12323445 12378407 12367684 12321469 12365717 \
12331399 12395137 12357078 12339263 12342306 12330403 12359089 12340791 12326845 12347218 12354933 12344015 12346601 12354179 12346934 12355713 12381516 12366222 12343916 12357779 \
12395367 12359966 12373757 12364336 12372037 12343944 12325341 12330704 12368418 12351294 12373448 12354457 12367227 12363213 12340773 12359629 12312717 12349045 12359260 12350077 \
12358201 12349851 12346356 12327767 12348651 12357457 12365848 12350719 12336411 12340953 12371287 12368972 12345267 12329875 12364720 12360855 12343445 12316769 12374257 12375278 \
12333572 12347105 12359519 12344835 12362815 12332340 12379206 12377311 12340673 12369305 12376664 12386068 12339697 12359025 12365183 12320606 12372068 12340510 12358013 12347548 \
12323893 12348604 12335304 12359128 12386992 12357313 12386393 12366891 12340845 12341816 12352096 12379991 12359622 12354759 12385894 12362212 12348939 12337470 12373215 12348443 \
12357541 12337796 12356805 12403346 12353639 12324316 12342328 12339408 12326261 12342619 12300141 12370160 12337221 12358683 12367096 12400738 12353538 12344487 12351744 12353299 \
12366720 12378891 12347131 12357571 12358184 12346931 12347577 12344580 12374176 12363520 12339026 12361504 12363280 12348604 12340160 12357366 12328090 12360804 12348001 12368803 \
12343077 12374158 12341027 12347719 12362948 12353570 12341804 12354273 12377340 12370168 12354897 12346409 12339332 12363332 12360277 12322592 12303434 12371186 12354146 12367591 \
12348259 12350596 12347488 12375658 12347652 12361088 12357944 12337385 12338444 12355883 12364704 12343429 12376278 12360028 12378964 12372637 12348772 12346442 12358126 12381434 \
12374707 12329131 12351050 12345170 12380162 12379611 12352386 12357648 12368495 12382107 12354943 12339997 12387672 12378588 12359415 12337963 12358109 12330936 12395777 12345154 \
12341961 12338718 12369765 12375319 12343775 12346147 12368642 12339727 12334664 12374600 12333286 12357410 12361195 12358135 12331621 12340309 12355890 12334910 12341934 12337980 \
12359982 12322772 12369119 12371479 12352034 12312830 12376609 12352042 12329863 12348997 12371960 12337680 12367770 12343313 12374129 12372279 12385633 12388204 12352809 12350768 \
12353970 12332169 12341679 12350204 12372410 12372076 12305473 12356162 12369447 12356457 12333308 12372017 12367804 12357723 12360122 12369525 12364414 12360515 12342094 12356788 \
12348567 12361168 12369619 12353444 12367460 12357449 12356458 12329057 12321151 12326645 12374847 12377488 12340370 12326726 12355784 12377259 12379382 12305858 12348657 12345033 \
12367955 12341178 12321000 12358532 12359820 12362280 12374639 12329195 12345583 12354223 12377900 12346759 12392752 12350849 12340132 12350135 12352565 12380307 12381645 12347512 \
12345074 12377777 12387687 12356305 12370160 12344398 12367688 12354603 12356622 12376008 12369114 12350615 12357775 12335494 12330205 12335195 12322311 12353673 12351993 12371721 \
12323217 12369062 12375649 12359918 12345619 12343028 12313443 12315102 12357717 12347171 12372256 12384832 12356308 12340613 12382730 12340878 12345290 12389370 12355613 12375250 \
12347365 12331977 12366622 12314413 12330451 12345672 12337084 12363407 12367851 12366832 12331710 12349689 12378513 12343753 12375112 12360496 12306178 12363950 12355667 12365287 \
12314701 12328518 12340034 12351288 12350140 12355861 12387262 12340931 12362292 12353417 12355127 12345554 12357967 12338164 12358148 12372799 12383772 12359297 12334593 12374045 \
12359417 12366132 12359143 12310138 12357024 12339849 12359358 12352536 12338349 12359887 12385809 12330744 12387629 12340302 12381836 12359175 12329892 12337374 12361926 12350376 \
12326795 12327659 12369385 12372214 12348293 12382536 12344918 12364523 12357854 12340184 12378226 12306920 12359912 12344782 12340429 12381974 12358352 12361551 12357221 12355889 \
12301239 12349026 12383904 12349264 12331672 12347766 12370274 12369317 12366971 12338186 12376657 12385191 12359196 12352957 12374144 12327478 12363243 12379600 12364561 12358888 \
12373487 12355411 12331679 12337673 12349618 12385128 12370920 12348800 12326037 12355645 12377348 12365449 12364736 12347785 12374714 12352559 12339278 12366046 12339597 12365769 \
12359747 12382367 12358576 12383599 12362690 12379148 12370028 12350920 12352648 12366765 12361570 12347983 12358482 12342991 12374254 12345454 12371594 12390540 12338499 12315394 \
12371706 12337326 12341813 12352324 12345648 12380944 12351403 12333022 12359108 12375008 12379337 12344925 12357437 12319623 12358919 12352840 12371262 12335959 12357198 12371532 \
12360508 12332739 12346969 12341014 12335203 12391090 12337008 12379869 12338376 12369808 12359563 12359556 12367670 12355247 12372785 12358760 12357507 12357952 12371474 12343531 \
12317431 12373229 12375739 12345390 12351085 12345108 12363701 12354196 12359418 12382001 12349825 12321375 12366309 12358988 12338082 12375503 12388587 12355402 12337146 12386620 \
12375289 12358418 12377579 12347270 12366561 12349151 12364851 12367210 12324066 12374560 12338508 12339977 12364912 12361290 12363519 12374067 12382692 12350224 12331918 12381332 \
12380413 12358213 12361861 12344635 12371886 12334874 12365949 12349334 12348934 12386121 12392656 12363136 12357785 12335456 12353637 12313970 12335579 12366110 12369225 12348568 \
12344659 12326971 12359920 12358684 12374272 12362029 12338352 12387347 12358587 12385132 12346821 12347190 12348279 12358929 12398662 12356297 12319750 12364764 12332911 12363213 \
12344721 12357713 12348309 12366131 12362873 12349732 12350894 12361203 12343641 12359649 12329443 12317555 12343744 12343490 12373611 12350263 12341260 12347528 12370246 12368177 \
12363608 12365019 12369467 12322311 12361820 12361535 12352574 12346058 12381610 12350713 12334017 12360947 12357046 12354054 12387670 12355621 12372292 12365305 12351411 12341120 \
12359166 12357695 12355730 12342102 12345247 12372314 12355715 12363657 12338300 12361629 12330044 12377357 12368230 12351655 12363432 12360154 12366794 12367312 12372369 12351902 \
12359192 12328428 12330010 12337810 12316738 12323916 12331924 12323239 12392508 12352420 12392651 12367149 12342990 12367752 12363862 12330165 12354516 12342849 12346777 12397522 \
12321808 12336759 12376049 12355263 12381487 12353464 12327432 12361870 12330170 12342435 12381772 12329993 12405384 12381396 12350431 12359421 12336092 12359010 12367363 12358681 \
12334828 12347922 12389870 12351251 12364035 12326783 12358533 12357277 12348658 12335094 12346501 12359162 12360572 12342889 12376179 12383411 12344352 12353134 12308830 12342801 \
12362689 12342441 12365264 12388376 12368754 12356216 12332847 12349780 12370614 12321713 12341448 12354436 12384296 12355530 12358632 12342754 12357102 12391463 12381308 12339114 \
12378635 12307678 12385773 12356722 12369115 12359028 12338707 12338123 12370191 12357360 12335664 12306950 12379314 12318121 12365828 12359697 12360049 12342722 12336134 12320913 \
12322685 12349870 12350577 12362208 12331963 12346240 12333461 12333986 12331311 12359986 12362293 12349954 12339589 12359281 12341840 12336353 12350850 12361492 12327705 12358709 \
12342123 12368003 12356560 12360449 12363750 12357615 12382228 12356655 12344706 12356878 12369821 12346120 12379049 12341471 12371707 12371122 12354160 12390148 12384695 12362502 \
12317224 12346722 12373507 12337770 12353848 12385450 12351025 12359875 12351268 12360571 12358031 12358604 12356643 12363005 12345796 12391633 12389778 12323961 12354799 12341076 \
12356114 12360274 12340633 12357085 12358944 12313055 12364061 12386904 12348493 12343857 12343146 12371609 12365106 12355421 12352160 12352651 12352182 12330718 12356229 12371025 \
12346415 12338653 12360766 12365128 12434357 12368720 12360477 12355016 12367541 12389527 12334772 12365917 12358770 12346229 12356365 12318195 12319097 12334980 12359127 12352678 \
12344376 12333287 12356703 12356650 12360067 12340790 12329024 12356539 12351012 12362051 12351203 12370041 12372130 12355968 12314682 12332723 12351443 12380373 12387019 12352316 \
12354111 12357216 12349765 12338583 12366914 12348176 12363603 12348538 12362237 12347638 12388291 12358954 12341697 12303298)\n"
else:
	if ElecFromElec:
		pbs_string_start+="Nparts=(14296546 14296546 14514698 14377623 14375897 14356883 14381142 14377372 14357711 14278580 14442150 14449068 14457121 \
14347223 14411093 14388768 14352151 14428541 14651998 14314539 14245347 14298844 14313860 14486094 14551487 14237048 14343197 14418885 14650428 \
14246392 14323984 14656217 14186068 14473968 14315665 14339584 14527794 14384271 14374746 14558748 14446474 14338515 14318586 14315309 14516420 \
14653526 14244681 14315587 14659906 14408342 14652984 14426990 14650615 14194202 14346802 14462366 14352050 14409440 14403427 14311978 14450162 \
14650147 14558302 14206684 14444385 14270786 14399828 14415137 14432777 14344821 14356589 14204070 14650663 14551260 14375315 14328451 14196497 \
14253894 14382844 14466414 14736643 14362721 14267808 14656258 14147855 14284998 14390493 14657272 14292963 14448678 14478315 14277744 14596293 \
14621515 14272306 14383294 14257173 14258566 14652315 14275772 14314821 14384519 14653879 14584438 14330477 14373886 14215367 14365574 14392262 \
14405140 14563433 14413013 14454600 14335130 14310443 14341888 14655821 14507353 14406670 14649928 14159431 14322328 14518884 14410427 14373756 \
14416493 14649408 14254173 14441633 14447628 14295296 14497744 14478790 14493674 14432478 14500419 14544326 14188698 14492020 14319205 14446901 \
14509286 14402714 14655218 14398385 14379845 14410575 14442013 14370620 14339169 14616608 14412395 14343024 14275865 14518916 14433795 14008157 \
14197841 14358912 14655109 14782562 14435056 14457141 14403924 14233835 14460663 14652374 14377741 14387305 14421541 14442249 14312979 14168917 \
14446771 14231147 14438810 14295889 14204848 14482502 14526687 14393707 14419532 14370664 14226531 14390566 14442978 14361238 14444687 14356911 \
14281803 14307228 14472252 14373536 14293038 14658582 14530061 14272642 14246038 14501005 14365733 14312079 14293024 14300711 14492942 14652970 \
14649757 14478012 14350555 14586057 14600182 14446473 14391571 14467199 14561215 14462980 14456013 14658092 14344081 14566709 14312813 14384753 \
14406662 14443026 14404040 14200802 14385940 14335145 14492378 14460473 14363312 14285804 14353067 14154394 14178462 14251661 14385328 14398391 \
14359004 14527967 14388265 14390260 14376192 14304835 14553674 14317303 14552176 14479114 14182138 14610260 14471582 14563725 14275411 14317289 \
14320454 14414493 14274911 14326692 14394406 14344777 14658257 14346564 14228437 14387380 14554439 14528211 14381662 14333377 14374510 14656110 \
14315242 14410905 14335390 14322513 14221837 14247520 14328559 14419605 14653922 14352034 14370145 14591968 14287937 14313020 14298358 14274004 \
14232906 14375620 14340454 14492949 14647231 14398045 14235798 14654854 14263988 14173526 14328873 14274161 14656818 14484956 14225695 14377167 \
14654676 14314021 14430449 14355615 14304985 14198225 14511495 14586149 14183426 14471941 14462386 14445945 14472277 14425222 14378908 14287179 \
14376995 14459380 14416375 14209951 14631308 14463024 14335980 14507913 14313659 14486140 14306381 14477013 14406963 14651268 14341060 14470660 \
14559503 14175635 14658078 14507438 14637473 14198252 14329004 14221919 14676020 14175034 14181037 14326817 14616730 14229830 14416201 14272911 \
14600085 14308103 14278081 14403204 14264798 14399547 14325765 14473173 14157734 14322362 14491685 14191148)\n"
	else:
		pbs_string_start+="Nparts=(723076 726689 721588 723309 721878 724607 724267 724281 727185 726609 726190 726936 722418 723290 724835 727439 729605 724112 728417 727185 \
724309 722563 726427 725083 724069 723800 723569 724427 724106 724285 726967 724286 725382 724372 725303 721256 725093 726255 726582 725262 725861 725578 725627 724605 \
725335 721732 724895 724857 725169 723918 723629 723852 723977 721671 723817 722571 726982 725637 725456 722179 729600 725144 726037 725565 724249 725913 725478 723888 \
727054 724376 724045 724665 723205 725440 726709 722246 723684 724543 722874 725219 725054 727738 724196 725892 725027 725946 726214 725221 724601 724853 724660 725109 \
723747 726553 722942 729880 726564 724176 725524 723464 726473 723354 723819 724795 726651 725743 724592 724810 722586 723189 723637 722944 726234 724773 727433 726050 \
727257 725847 722684 721459 723612 724387 723968 723302 726953 728120 724587 727705 722730 725946 725465 721650 724488 724482 725371 724987 724165 726479 723214 726140 \
726760 724883 725704 724611 723897 726129 721605 722726 724646 722547 721644 725835 723433 726584 723170 722628 725836 724803 724918 725127 727987 726074 724729 726055 \
725774 725340 724625 723951 728024 724103 723363 723708 726447 724672 722414 725876 719671 724013 725690 725236 728701 723135 723564 724516 725365 726420 725174 722192 \
725026 724963 726450 722928 724875 726054 726089 723149 723545 726449 724016 723395 725411 724315 723936 722153 721599 726113 724167 725625 724845 726694 721967 724921 \
725513 724924 726978 727700 724100 725372 725449 723254 722670 724542 725674 723996 723895 728696 725272 726265 723808 725377 723132 725151 724409 725686 724260 724487 \
724705 724652 726233 722340 724254 724545 724568 727878 724491 725650 723508 726329 726237 724508 724998 724148 726590 723836 724987 725977 725445 723631 722033 722647 \
727058 724104 722650 723677 726998 724300 725349 723327 721956 727520 723390 722548 726163 725821 724856 725087 723563 724379 726348 725662 725027 726247 725448 \
726384 724260 724789 726576 724763 725133 723284 726155 726735 725811 722242 725431 725280 727713 723809 726035 723293 725818 726355 722930 723314 725495 726366 \
724089 724434 723503 725759 725055 725755 721770 724691 724866 721309 726068 724279 722410 723021 724789 726469 723750 724356 725220 723465 725121 726949 725243 \
727030 727271 724328 723908 723070 723576 726984 722429 725535 727656 724998 723280 726084 723724 724438 724229 729832 724171 723970 725830 722564 725790 723994 \
725003 725776 724562 724964 723843 723024 726605 724180 723544 724910 724183 727454 726564 726083 724297 722782 723934 722827 724798 722496 725908 725968 726157 \
724446 726784 725866 725659 725301 724830 723795 725016 725182 724509 728222 728463 725547 724404 726553 726647 726892 725749 726019 725257 726135 724712 724265 \
726075 725502 726078 723472 723119 723671 726116 722487 724612 725813 723731 722530 723409 723850 725363 726688 726058 724644 722291 726379 723202 726349 722923 \
721601 725054 726895 724477 726129 724403 724982 727009 726136 726046 726862 722656 725467 725559 724410 728114 723273 721308 722380 725032 727881 725583 723893 \
723954 724265 722794 724472 726254 723853 723678 725097 723135 726586 723020 725454 723345 724867 725501 725197 727693 723504 727448 720733 724368 723821 725894 \
725116 724927 724770 726739 724595 723575 727506 724034 726855 726251 723215 725749 722302 726331 726058 724485 721575 726030 723343 728725 724329 725925 725959 \
722761 724936 726470 724095 722764 721677 723201 724458 726320 725528 726434 726902 725303 726964 722379 724837 726761 722830 727971 728213 727170 724044 725937 \
725111 720642 721158 723834 724772 723659 725883 722030 723087 724606 724132 725024 724812 726720 724710 725991 724084 723966 723364 724312 725194 725049 727681 \
724498 723832 723000 726156 724486 725614 723740 724594 725502 726844 725409 724703 724997 724691 724524 724902 725458 724090 725399 723077 723794 723970 \
725237 725337 725216 724703 726366 725209 726236 724565 723816 720377 725083 724954 727509 724640 724809 725176 723952 721929 724732 725952 725042 726936 \
721760 724380 725815 724355 723514 726895 726936 723954 725937 725184 723922 726372 724006 726794 723884 722592 723631 723310 726535 729005 721193 726778 \
723038 726178 725729 725612 726028 727376 724539 721571 723273 723068 727239 724139 722642 727298 726647 723862 724215 720096 725408 721976 722728 724811 \
723214 724874 725646 725973 725350 728053 727531 725635 722744 724688 724986 725375 723303 724405 723845 721408 726287 728747 724555 723782 722168 725824 \
724662 723397 726653 726518 724925 726616 722157 727076 725238 725637 723491 723200 723198 723801 722995 723598 727194 726385 723671 723380 724405 724636 \
724253 723616 725540 722253 723611 724800 724812 723328 726779 723398 722544 722776 723949 727821 722561 725153 724936 725671 724240 724957 725454 725689 \
725074 727249 722985 722606 724318 726204 723272 723876 725941 725346 725427 726196 724201 723423 720398 723084 727432 725667 727891 729006 726788 721930 \
727330 725223 725845 724978 722502 723552 727705 721580 722182 726215 725244 724578 722989 723674 720846 725392 724938 724126 725479 725296 728237 724193 \
723820 724813 725593 723551 723518 727767 726731 725526 724382 725413 720867 725396 722725 724561 728035 725049 723250 725518 725715 721646 726531 721807 \
721703 721686 724894 721064 723812 721097 730187 723726 727268 725293 721820 724680 725401 722007 724204 723805 725620 727938 723148 725288 725719 727934 \
724183 727453 725208 726218 721907 724877 725430 724997 727347 727549 724163 724346 722271 724093 727058 725183 723947 722506 725519 723133 724367 \
723260 725010 726929 724847 726959 723177 723363 724897 722266 724943 726652 721351 722140 724322 725511 726797 721815 727873 726559 724595 726515 \
723411 722552 726523 722480 723252 721620 724441 725528 724788 724296 726201 725800 724860 721478 727128 724387 726977 725217 725698 726478 724199 \
720893 725026 726131 721945 723996 725283 724576 726522 725939 726473 725817 725966 724533 723657 725430 726799 726950 725025 724348 723197 722097 \
721515 724119 722445 724754 724575 722932 726172 724646 726487 724270 724966 726894 722776 724720 725374 724403 724265 723891 727018 725213 722447 \
725564 726692 728678 726060 725131 721020 726564 722980 723576 725462 722896 722545 729202 725624 724871 724314 725534 724144 724655 722814 725574 \
724985 724766 725034 723604 722843 724268 725581 724389 725379 727303 726027 724520 723844 726785 724384 722500 727173 725014 726861 722713 724898 \
725633 725402 725197 724882 725968 726279 724051 724640 725070 725656 725849 724992 725398 726931 724011 726092 725189 724881 726380 725921 723508 \
723801 722647 725571 725071 725615 723821 725878 724801 723297 723522 726741 725006 726868 723097 722454 725400 726336 726770 724213 726892 723735 \
723965 723437 721171 724848 724442 726249 724052 721633 726365 723620 722816 723914 725057 725204 725070 724887 724684 724803 722529 728010 720530 \
723974 725488 724460 721964 723490 725748 723310 725004 727774 724164 725071 724080 721255 722993 725707 727796 727842 723564 727929 728156 723482 \
724191 726793 724410 724648 723103 725017 722689 723568 726377 724274 723885 725173 724519 725491 722125 722351 725694 725602 726415 724436 726003 \
724714 726359 725527 722266 724091 725615 725896 724877 725979 725065 722951 722451 724130 724176 725353 724215 726611 719852 728200 724649 726864 \
725293 720932 725836 724744 723794 727629 723872 723000 726026 723793 726007 725278 722897 722881 725063 723485 724918 724198 727464 723062 723071 \
724865 725809 726836 723685 724090 722628 725269 724029 723239 725864 723059 727501 724148 723703 725431 721632 723916 723875 724082 724639 725998 \
723520 725414 725507 720310 724605 723279 722281 726481 724784 728268 725303 724459 726026 721993 722395 723456 725349 724065 724083 727216 727537 \
725566 727204 720150 724721 724319 722894 724834 725189 724561 723648 724856 726417 724562 725935 725700 725943 725840 723689 723908 727176 722117 \
722551 724162 721639 722681 724251 724366 726868 722202 721116 725922 724070 723875 724280 728878 726560 725991 725914 724407 724356 721469 723160 \
726919 723946 723885 723614 725682 723958 724645 725203 720881 724287 725668 725278 729478 723983 721849 724591 724490 724792 725137 721684 724184 \
724560 727757 725008 725140 726355 727445 723998 722283 727496 723011 724349 727290 725090 724694 721001 722820 724581 721935 725787 724136 727560 \
721689 724014 725038 725461 725944 728394 725378 725089 725135 724915 722963 723282 726584 725943 723979 727027 724363 724058 723140 727247 725003 \
729113 724308 725812 723240 726861 725438 725572 725773 724230 722161 725604 725380 727390 724317 725678 723892 724752 726482 724080 724698 725895 \
726231 725183 725335 726651 724238 724059 722163 722838 724409 724777 722603 722965 724462 725200 725129 723621 722438 726374 722838 724600 726953 \
726280 722849 725952 725089 724504 726550 726119 724915 725513 725106 726509 723727 723808 726523 723894 726043 725166 725077 724903 725210 721916 \
725352 727042 727259 726057 723826 722008 727371 725554 723197 722650 723544 724714 723300 722215 726219 723671 724157 726135 724605 725016 724551 \
721714 726221 726810 722948 724405 723225 726868 724423 725396 724846 724451 725275 725559 722964 726300 726489 723031 724151 724124 723210 725129 \
724367 725275 726749 724962 722612 725487 722751 725575 724418 728866 725066 723967 726400 723042 726970 725667 723732 726669 724852 726615 722732 \
722969 728321 722611 724271 725072 722684 726901 727852 725603 724558 723744 724543 723098 725034 721677 727740 725143 724866 725611 724921 727950 \
725614 725812 724802 723517 723648 724879 725820 729297 728569 722583 724419 724236 726496 726662 723486 726273 724905 727534 724310 724853 725969 \
725321 726926 722112 725034 724913 725258 724388 724815 723520 723709 726295 724356 726311 726703 726656 726991 725632 723328 725697 724103 726388 \
722141 722362 724434 726115 725566 726258 724757 724465 725966 727113 723701 723910 723763 724040 725415 722908 725949 724390 723486 723247 724719 \
726290 724526 724252 724945 725447 722428 724049 724476 723422 723226 725704 723640 725732 723120 724912 722687 724452 724910 724308 726836 721868 \
728442 720212 723045 723255 724662 725474 725579 724771 726357 726139 721129 728875 724329 726560 724675 722029 725253 723836 724835 724551 723953 \
722196 726513 721795 727933 723850 725388 724689 721310 725709 726797 724070 725012 722254 724569 724335 726745 725968 725556 727183 726948 726994 \
724463 723409 727193 723228 726701 726332 727545 723693 725889 729350 719699 720350 723646 725111 724123 726331 723093 723473 723874 724435 726088 \
726273 725032 726111 726850 722509 725794 725472 725517 725394 725275 726137 721905 723542 723368 727307 725675 723792 724027 724684 725996 725438 \
725120 724637 724274 724229 723485 725589 724662 722899 727863 721833 722946 723631 724180 724601 722166 725608 725659 726050 725390 723621 722481 \
720469 726274 723299 729263 726609 724207 722871 724307 722520 725091 724887 724637 725745 720677 724249 725657 725634 724165 727435 724224 725233 \
727246 724985 723791 727034 724479 728680 724568 722301 722409 721654 728731 725877 721235 725071 726091 723502 725278 725377 725618 725916 723854 \
722770 722464 724755 727495 723687 720652 725991 726813 724791 723552 720886 724768 722876 725837 724921 721768 722870 726210 725278 725680 729822 \
727189 727441 724738 726021 725195 725811 724286 725250 725061 723363 728634 727758 723877 723232 722571 724681 725993 723201 728106 724902 724782 \
723743 721309 724031 725825 724971 724100 726010 723536 725965 721545 723793 725348 726108 723876 723228 725194 722908 724213 724452 725429 723388 \
724203 725691 723773 724330 723810 724738 724260 722848 724380 726285 723359 725730 724962 724805 723829 726367 726192 724066 724831 724868 723941 \
722852 723119 725178 722721 723794 724356 722345 725753 725235 724518 723121 723050 723326 727544 724122 728111 730290 724972 722683 727174 724684 \
725270 726322 725715 725196 726608 722613 723259 724982 726259 725015 723463 723809 722487 724946 723499 722657 726383 725240 727749 723813 724385 \
723714 727344 722246 724050 726585 725741 726727 724424 726484 721830 725898 724139 725570 727674 724770 725121 723594 724863 724058 724242 722363 \
722751 723037 725758 722993 725046 722127 729844 724863 725171 726029 723026 725683 725676 722586 726387 724412 726268 726886 723530 723748 726335 \
728793 723298 726890 726689 723370 724318 722813 723988 723849 727260 727077 724678 725147 725928 724103 727351 726208 723509 724325 725369 723639 \
723711 722024 722337 728141 723076 721443 725430 723229 724440 727748 726426 724033 727263 721458 725367 726280 725336 727000 724146 727177 728511 \
725651 721105 726997 722926 723564 723232 723689 724637 724643 722552 725281 725149 725599 724248 722160 724276 725153 726714 724974 724786 725405 \
725665 727084 725234 724762 724184 725768 725811 723514 725876 723167 724250 723431 725064 724451 725024 723636 721707 728510 725591 725522 724964 \
722763 725641 723758 724776 726355 724248 724547 726007 721601 724649 726030 722718 725273 722024 724736 725035 726137 722202 722704 725938 726543 \
725359 725705 725456 724351 725429 724315 723742 727898 722434 729291 725332 721797 723949 722153 726268 723270 722608 723934 727323 726090 725424 \
726646 723291 724792 722144 723445 727129 723275 727101 726017 726771 725509 721331 722395 725082 725648 724784 724994 726897 726840 725389 727965 \
721126 725687 722826 720678 725851 728638 723749 725288 723809 726076 725922 724643 724542 725630 726683 724484 722899 727439 722518 723562 724819 \
723077 723607 725828 725230 727680 724997 721455 722887 724188 723135 726611 727032 725155 725930 728729 725996 723612 722683 722814 728357 722097 \
724244 722505 725278 724524 722225 725950 721228 724465 724063 723745 729430 723320 723823 724953 723335 726232 725024 724048 725273 723364 725557 \
726647 724355 724520 724806 724265 721773 728494 723112 724808 725068 724489 726647 722526 722578 724508 723770 725500 725758 726327 722235 726251 \
723299 724496 726034 726691 724600 726913 726121 725093 725382 722654 726960 723415 724112 728134 726313 724002 723614 726379 726256 727454 724775 \
725452 724691 728391 723535 725456 725684 722812 720918 726033 725924 726939 725333 725345 723656 725897 725122 724684 723776 725159 726163 723152 \
724028 726951 725905 722182 722083 723060 726231 724306 724027 721614 726090 725642 724025 723272 722643 724518 723900 726208 724500 729656 723810 \
723438 724585 726439 726067 723624 725522 723835 725206 723896 725284 725965 724905 726741 726394 721530 724699 725221 722900 726182 724732 722825 \
721013 723913 727000 723324 725998 725983 725030 723847 724601 723874\
)\n"




pbs_string_start+=f"cat  {macrofile} \n"


###############################################################
###  Iterate through dimensions, materials, translations    ###
###        Create parameter list for Gate command           ###
###############################################################

if (gamma):
	particle_type_input="/gate/source/beam_g/setParticleType gamma"
	particle_outfilename="Gamma"
	print("gamma")
	script_ending="gamma"
	comptonbias="/process/em/setBiasingFactor compt 100 True"
else:
	particle_type_input="/gate/physics/processList Enabled" #to avoid setting particle type as it is read from file
	particle_outfilename="Elec"
	print("elec")
	script_ending="elec"
	comptonbias="/process/em/setBiasingFactor compt 1 True"
	if ElecFromElec:
		script_ending+="FromElec"
		particle_outfilename+="FromElec"

which_output=""
pbs_string_first=""
pbs_string_second_0=""
pbs_string_second_10=""


for blackout_first in ([False]): #True,
	for grating_thick in grating_thicknesses:
		# if grating_thick>99:
		# 	continue
		for BlackOut_thick in BlackOut_thickness:
			for peak_mat in peak_material:
				for blackout_mat in blackout_material:
					if blackout_first:

						translation_BO_um=-airbox_half_thick_um+(BlackOut_thick/2.0)
						translation_peak_um=-airbox_half_thick_um+BlackOut_thick+(grating_thick/2.0)
						# translation_peak_mm=translation_peak_um/1000.0
						# translation_BO_mm=translation_BO_um/1000.0
						output_file_path=f"{out_dir}PhS3DoseFrom{particle_outfilename}_{grating_thick}umpeak_{BlackOut_thick}umBlackOut_peakMat_{peak_mat}_BOmat_{blackout_mat}_BlackOut-under-peaks"
						which_output="BO_First"

						translation_peak_mm=translation_peak_um/1000.0
						translation_BO_mm=translation_BO_um/1000.0

						print(output_file_path)
						if not (os.path.isdir(output_file_path)):
							os.mkdir(output_file_path)


						param_list=f'[peakzlength_um,{grating_thick}] [peakztrans_mm,{translation_peak_mm}] [lightcoverzlength_um,{BlackOut_thick}]'
						param_list+=f' [lightcoverztrans_mm,{translation_BO_mm}] [pathOutputDose,{output_file_path}] [inputParticleType,{particle_type_input}] [pathGateMaterials,{materials_path}]'
						param_list+=f' [id,{file_number}] [inputPhaseSpaceFile,{phasespace_in}] [seed,{seed_rand}] [primaries,{how_many_primaries}]'
						param_list+=f' [lightcover_material,{blackout_mat}] [peak_material,{peak_mat}]'
						param_list+=f' [comptbias, {comptonbias}]'


						mycommandpy=f"\"Gate {macrofile} -a '{param_list}'\"\n"
						# print (mycommand)

						pbs_string_first+=f"mycommand={mycommandpy}\necho $mycommand \neval $mycommand\necho \"Time of interum job ending : $(date)\" \n"

						hadd_string_BOclose=hadd_string

						hadd_string_BOclose+=f"hadd -f {output_file_path}/Total-Edep.root {output_file_path}/*Edep.root \n"
						hadd_string_BOclose+=f"hadd -f {output_file_path}/Total-Edep-Squared.root {output_file_path}/*Edep-Squared.root \n"
						hadd_string_BOclose+=f"hadd -f {output_file_path}/Total-NbOfHits.root {output_file_path}/*NbOfHits.root \n"
						hadd_string_BOclose+="now=$(date) \necho \"Time of completion : $now\" " 

						hadd_file_name=f"hadd_flex_script_{script_ending}_{grating_thick}umpeak_{BlackOut_thick}umBlackOut_peakMat_{peak_mat}_BOmat_{blackout_mat}_BlackOut-under-peaks.pbs"
						all_qsub_hadd+=f"qsub {hadd_file_name}\n"
						with open(hadd_file_name, "w") as text_file:
						    print(hadd_string_BOclose, file=text_file)

					else:
						for matpath in mat_path_air_density:
							for distance_BlackOut_to_peaks_mm in BlackOut_distances:

								distance_BlackOut_to_peaks_um=distance_BlackOut_to_peaks_mm*1000 #mm
								translation_BO_um=-airbox_half_thick_um+grating_thick+(BlackOut_thick/2.0)+distance_BlackOut_to_peaks_um
								translation_peak_um=-airbox_half_thick_um+grating_thick/2.0
								output_file_path=f"{out_dir}PhS3DoseFrom{particle_outfilename}_{grating_thick}umpeak_{BlackOut_thick}umBlackOut_peakMat_{peak_mat}_BOmat_{blackout_mat}_peaks-under-BlackOut_{distance_BlackOut_to_peaks_mm}mm_{matpath[14:-3]}"
								which_output=f"BO_Second_{distance_BlackOut_to_peaks_mm}mm"

								translation_peak_mm=translation_peak_um/1000.0
								translation_BO_mm=translation_BO_um/1000.0

								print(output_file_path)
								if not (os.path.isdir(output_file_path)):
									os.mkdir(output_file_path)

								total_mat_path=f'{materials_path}{matpath}'
								param_list=f'[peakzlength_um,{grating_thick}] [peakztrans_mm,{translation_peak_mm}] [lightcoverzlength_um,{BlackOut_thick}]'
								param_list+=f' [lightcoverztrans_mm,{translation_BO_mm}] [pathOutputDose,{output_file_path}] [inputParticleType,{particle_type_input}]'
								param_list+=f' [id,{file_number}] [inputPhaseSpaceFile,{phasespace_in}] [seed,{seed_rand}] [primaries,{how_many_primaries}]'
								param_list+=f' [lightcover_material,{blackout_mat}] [peak_material,{peak_mat}] [pathGateMaterials,{total_mat_path}] [comptbias, {comptonbias}]'


								mycommandpy=f"\"Gate {macrofile} -a '{param_list}'\"\n"
								# print (mycommand)

								if distance_BlackOut_to_peaks_mm==0:
									pbs_string_second_0+=f"mycommand={mycommandpy}\necho $mycommand \neval $mycommand\necho \"Time of interum job ending : $(date)\" \n"
					
								elif distance_BlackOut_to_peaks_mm==10:
									pbs_string_second_10+=f"mycommand={mycommandpy}\necho $mycommand \neval $mycommand\necho \"Time of interum job ending : $(date)\" \n"


								hadd_string_BOclose=hadd_string

								hadd_string_BOclose+=f"hadd -f {output_file_path}/Total-Edep.root {output_file_path}/*Edep.root \n"
								hadd_string_BOclose+=f"hadd -f {output_file_path}/Total-Edep-Squared.root {output_file_path}/*Edep-Squared.root \n"
								hadd_string_BOclose+=f"hadd -f {output_file_path}/Total-NbOfHits.root {output_file_path}/*NbOfHits.root \n"
								hadd_string_BOclose+="now=$(date) \necho \"Time of completion : $now\" " 

								hadd_file_name=f"hadd_flex_script_{script_ending}_{grating_thick}umpeak_{BlackOut_thick}umBlackOut_peakMat_{peak_mat}_BOmat_{blackout_mat}_peaks-under-BlackOut_{distance_BlackOut_to_peaks_mm}mm.pbs"
								all_qsub_hadd+=f"qsub {hadd_file_name}\n"
								with open(hadd_file_name, "w") as text_file:
								    print(hadd_string_BOclose, file=text_file)



pbs_string_end="now=$(date) \necho \"Time of completion : $now\" " 

with open(f"flex_script_{script_ending}BO_First.pbs", "w") as text_file:
    print(pbs_string_start+pbs_string_first+pbs_string_end, file=text_file)

with open(f"flex_script_{script_ending}BO_Second_0mm.pbs", "w") as text_file:
    print(pbs_string_start+pbs_string_second_0+pbs_string_end, file=text_file)

with open(f"flex_script_{script_ending}BO_Second_10mm.pbs", "w") as text_file:
    print(pbs_string_start+pbs_string_second_10+pbs_string_end, file=text_file)

with open(f"all_hadd_script_{script_ending}.sh", "w") as text_file:
    print(all_qsub_hadd, file=text_file)





